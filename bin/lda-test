#!/bin/bash

trap "echo 'signal.....quit'; exit" SIGHUP SIGINT SIGTERM

homedir=`dirname $0`
homedir=`dirname $homedir`

check_ret()
{
if [ "$?" -ne "0" ] ; then
    echo "run command error, quit...."
    exit -2
fi
}


help()
{
cat <<EOF
lda-test commands: 
  set-testset     <ap-sample | enwiki-100k> setup the testset 
  evaluate-harp   <modeldir>    load the model from harp lda trainer and test likelihood on held-out testset
  evaluate-mallet <modeldir>    load the model from mallet lda trainer and test likelihood on held-out testset
  evaluate-gibbs  <modeldir>    load the model from gibbs lda trainer and test likelihood on held-out testset

Include --help with any option for more information
EOF
}


# dataset
init()
{
    if [ "$TESTSET" == "enwiki-100k" ] ; then
        # enwiki-100k
        datadir=$homedir/data/enwiki-100k
        gibbsdict=$datadir/enwiki-100k-gibbs.wordids
        harpdict=$datadir/enwiki-100k-reid.wordids
        testset=$datadir/test100k.mallet
        testdict=$datadir/test100k.mallet.dict
        testdoccnt=100000
        testwordcnt=32733688
        alpha=0.5
        beta=0.1
    elif [ "$TESTSET" == "ap-sample" ] ; then
        # ap-sample
        datadir=$homedir/data/ap-sample-mallet
        gibbsdict=$datadir/ap-sample.mallet.wordids
        harpdict=$datadir/ap-sample.mallet.wordids
        testset=$datadir/ap-sample.mallet.input
        testdict=$datadir/ap-sample.mallet.dict
        testdoccnt=2278
        testwordcnt=463468
        alpha=2.5
        beta=0.1
     elif [ "$TESTSET" == "pubmed" ] ; then
        # pubmed-test-200k, pubmed-2M as train set
        datadir=$homedir/data/pubmed
        gibbsdict=$datadir/pubmed-2M.mrlda.reid.txt.wordid
        harpdict=$datadir/pubmed-2M.mrlda.reid.txt.wordid
        testset=$datadir/pubmed-test-200k.mallet.txt
        testdict=$datadir/pubmed-test-200k.mallet.dict
        traindict=$datadir/pubmed-2M.mallet.dict
        testdoccnt=200000
        testwordcnt=20372837
        alpha=0.05
        beta=0.01
     elif [ "$TESTSET" == "pubmed-2" ] ; then
        # pubmed-test-200k
        datadir=$homedir/data/pubmed
        gibbsdict=$datadir/pubmed-2M.mrlda.reid.txt.wordid
        harpdict=$datadir/pubmed-2M.mrlda.reid.txt.wordid
        testset=$datadir/pubmed-test-200k-2.mallet.txt
        testdict=$datadir/pubmed-test-200k-2.mallet.dict
        testdoccnt=200000
        testwordcnt=20106255
        alpha=0.05
        beta=0.01
    else
        echo "testset '$TESTSET'=$TESTSET not found, quit..."
        help
        exit -2
    fi
}

# start here

CMD=$1
shift

CLASS=

case $CMD in
    set-testset)
        export TESTSET=$1
        echo "sorry, you have to do it yourself by type this command in shell: "
        echo 
        echo "export TESTSET=$1"
        echo 
        exit 0
        ;;

    evaluate-harp) 
        init
        # <harp model dir> 
        modeldir=$1
        savedir=`pwd`
        cd $modeldir
        for d in `ls`; do python $homedir/src/preprocess/convertHarp2Mallet.py $d $alpha $beta $testdict $harpdict; done

        cd $savedir
        python $homedir/src/evaluation/test_likelihood.py $homedir/tool/mallet/bin/ harp $modeldir $testset $testdoccnt $testwordcnt

        ;;

     evaluate-mallet-native) 
        init
        # <harp model dir>
        modeldir=$1
        savedir=`pwd`
        cd $modeldir

        malletfiles=`ls *.mallet 2>>/dev/null`
        if [ "$?" -ne "0" ] ; then
            modelfiles=`ls model* 2>>/dev/null`
            if [ "$?" -ne "0" ] ; then
                echo "model. files not found, quit..."
                exit -2
            else
                for f in $modelfiles; do mv $f $f.mallet; done
            fi
        fi

        malletfiles=`ls *.mallet 2>>/dev/null`
        if [ "$?" -eq "0" ] ; then
            cd $savedir
            python $homedir/src/evaluation/test_likelihood.py $homedir/tool/mallet/bin/ mallet $modeldir $testset $testdoccnt $testwordcnt
            #check_ret
        fi


        ;;

     evaluate-mallet) 
        init
        # <harp model dir>
        modeldir=$1
        savedir=`pwd`
        cd $modeldir

        malletfiles=`ls *.mallet 2>>/dev/null`
        if [ "$?" -ne "0" ] ; then
            modelfiles=`ls mallet* 2>>/dev/null`
            if [ "$?" -ne "0" ] ; then
                echo "model files with prefix=mallet not found, quit..."
                exit -2
            else
                matfiles=`ls *.hyper 2>>/dev/null`
                if [ "$?" -ne "0" ] ; then
                    # convert modelfiles into mallet modeldata files
                    for f in `ls mallet*`; do
                        fname=`basename $f `.mat
                        echo "save model to txtmatrix: $fname......"
                        $homedir/tool/mallet/bin/mallet evaluate-topics --word-topic-counts-file $fname --modelfile $f --input $testset
                    done
                else
                    echo '.hyper files exists, skip covert to txtmatrix '
                fi

                # convert txtmatrix file to mallet modeldata
                for f in `ls *.hyper`; do
                    fname=`basename $f .hyper`
                    python $homedir/src/preprocess/convertTxt2Mallet.py $fname $testdict $traindict
                done
            fi
        else
            echo '.mallet file exists, skip convert to modeldata '
        fi

        malletfiles=`ls *.mallet 2>>/dev/null`
        if [ "$?" -eq "0" ] ; then
            cd $savedir
            python $homedir/src/evaluation/test_likelihood.py $homedir/tool/mallet/bin/ harp $modeldir $testset $testdoccnt $testwordcnt
            #check_ret
        fi

        ;;


    evaluate-gibbs) 
        init
        # <gibbs model dir> 
        modeldir=$1
        savedir=`pwd`
        cd $modeldir

        phifiles=`ls *.phi 2>>/dev/null`
        if [ "$?" -ne "0" ] ; then
            echo ".phi files not found at $modeldir, quit...."
            exit 2
        fi

        betafiles=`ls *.beta 2>>/dev/null`
        if [ "$?" -ne "0" ] ; then
            for f in $phifiles; do python $homedir/src/preprocess/convertGibbsPhiToBeta.py $f `basename $f .phi`.beta; done
        fi


        betafiles=`ls *.beta 2>>/dev/null`
        harpfiles=`ls *.harp 2>>/dev/null`
        if [ "$?" -ne "0" ] ; then
            for f in $betafiles; do python $homedir/src/preprocess/convertBeta2Harp.py $f $gibbsdict $beta; done
        fi

        harpfiles=`ls *.harp 2>>/dev/null`
        malletfiles=`ls *.mallet 2>>/dev/null`
        if [ "$?" -ne "0" ] ; then
            for f in $harpfiles; do python $homedir/src/preprocess/convertHarp2Mallet.py $f $alpha $beta $testdict $gibbsdict; done
        fi

        cd $savedir
        python $homedir/src/evaluation/test_likelihood.py $homedir/tool/mallet/bin/ gibbs $modeldir $testset $testdoccnt $testwordcnt

        ;;

    run) 
        CLASS=$1
        shift
        python $CLASS $*
        ;;
    *) echo "Unrecognized command: $CMD"; help; exit 1;;
esac

